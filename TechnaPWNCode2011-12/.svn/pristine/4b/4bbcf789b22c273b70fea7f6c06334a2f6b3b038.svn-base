#pragma config(UART_Usage, UART2, VEX_2x16_LCD, baudRate1200, IOPins, None, None)
#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, in1,    Gyro,           sensorGyro)
#pragma config(Sensor, in2,    LeftLineFollowerPort, sensorLineFollower)
#pragma config(Sensor, in3,    RightLineFollowerPort, sensorLineFollower)
#pragma config(Sensor, in4,    CdS,            sensorReflection)
#pragma config(Sensor, dgtl1,  VariableEncoderPort, sensorQuadEncoder)
#pragma config(Sensor, dgtl10, TinesPort,      sensorDigitalOut)
#pragma config(Sensor, dgtl11, LiftEncoderPort, sensorQuadEncoder)
#pragma config(Sensor, I2C_1,  IMEDriveFR,     sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_2,  IMEDriveFL,     sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_3,  IMELift,        sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Motor,  port1,           DriveBL,       tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port2,           IntakeL,       tmotorServoContinuousRotation, openLoop, reversed)
#pragma config(Motor,  port3,           LiftBR,        tmotorServoContinuousRotation, openLoop, reversed)
#pragma config(Motor,  port4,           LiftBL,        tmotorServoContinuousRotation, openLoop, reversed)
#pragma config(Motor,  port5,           DriveFR,       tmotorServoContinuousRotation, openLoop, reversed, encoder, encoderPort, I2C_1, 1000)
#pragma config(Motor,  port6,           DriveFL,       tmotorServoContinuousRotation, openLoop, encoder, encoderPort, I2C_2, 1000)
#pragma config(Motor,  port7,           LiftFL,        tmotorServoContinuousRotation, openLoop, reversed, encoder, encoderPort, I2C_3, 1000)
#pragma config(Motor,  port8,           LiftFR,        tmotorServoContinuousRotation, openLoop, reversed)
#pragma config(Motor,  port9,           IntakeR,       tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port10,          DriveBR,       tmotorServoContinuousRotation, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#pragma platform(VEX2)
//#define _SIMULATED						// SIMULATOR SWITCH - FOR COMPETITION THIS SHOULD BE COMMENTED OUT!
#define DOWNLOADAUTONOMOUSROUTINES		// AUTONOMOUS SWITCH - FOR COMPETITION THIS SHOULD NOT BE COMMENTED OUT!
#define DEFAULTAUTOROUTINE 3

// ************************************************************************************
// * The following code was creatively composed by Josiah Krutz and Ryan Plummer for
// * Andy, Team 3018's (Techna PWN Robotics) 2011-2012 Robot
// *
// * Addition support provided by:
// *  - http://robotc.net/forums/viewtopic.php?f=52&t=1280
// *  - Josh Duff
// ************************************************************************************

#include "Definitions.c"
#include "Global_Variables.c"
#include "Function_Declarations.c"
#include "Pre_Autonomous.c"
#include "Initialization_Functions.c"
#include "Autonomous_Code.c"
#include "Get_Input.c"
#include "Autonomous_Routines.c"
#include "Operator_Code.c"
#include "PID_Controller_Code.c"
#include "Display_Functions.c"
#include "Display_Tasks.c"
#include "Misc_Functions.c"
#include "Do_Output.c"
